#!/usr/bin/env python3

import sys
import argparse
import re


# Utility script for numbering lines
# Great for making lists in a markdown file


def main():
    args = makeParser().parse_args()

    if args.startFrom:
        startFrom = args.startFrom
    else:
        startFrom = 0 if args.shouldStartAtZero else 1

    numberLines(sys.stdin, startFrom, args.shouldBoldMarkdown, args.shouldRenumberLines)


def makeParser():
    parser = argparse.ArgumentParser(description='Number lines of input from stdin')

    parser.add_argument(
            '-0',
            dest='shouldStartAtZero',
            action=argparse.BooleanOptionalAction,
            help='Start numbering from 0 instead of 1.')

    parser.add_argument(
            '-b',
            dest='shouldBoldMarkdown',
            action=argparse.BooleanOptionalAction,
            help='Surround each line in **markdown bold**')

    parser.add_argument(
            '-r',
            dest='shouldRenumberLines',
            action=argparse.BooleanOptionalAction,
            help='Replace existing numbers on lines and start over from 1')

    parser.add_argument(
            '-s',
            dest='startFrom',
            type=int,
            help='Start numbering from this number instead of the default: `1`')

    return parser


def numberLines(file, startFrom, shouldBoldMarkdown = False, shouldRenumberLines = False):
    number = startFrom
    for line in file:
        if not line.strip():
            print()
        else:
            line = line.strip()

            if shouldRenumberLines:
                line = re.sub(r'^\d+\.\s+', '', line)

            if shouldBoldMarkdown:
                line = f'**{line}**'
            line = f'{number}. {line}'

            print(line)
            number += 1


if __name__ == '__main__':
    main()
