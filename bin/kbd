#!/usr/bin/env python3
import sys
import argparse
import re

# quick script to print out kbd keys, nice to filter input for note taking

def make_parser():
    parser = argparse.ArgumentParser(description='add <kbd> tags to markdown, by default replaces |key| with <kbd>key</kbd>')

    parser.add_argument(
            '-w',
            dest='should_separate_words',
            action=argparse.BooleanOptionalAction,
            help='Surround each word with a separate kbd tag and combine with a +')


def kbd_words(line):
    ''' surround each word with <kbd></kbd> '''
    words = line.split()
    count = len(words)

    for i in range(count):
        word = words[i]
        print(f'<kbd>{word}</kbd>', end='')
        if i < count - 1:
            print(' + ', end='')


pipes = re.compile(r'\|([^\|]+)\|')


def kbd_pipes(line):
    ''' Apply |key| rules and |combination + key| rules '''
    # for single keys: |W|
    print(kbd(line), end='')


def kbd(word):
    ''' replace occurrences of |something| with <kbd>something</kbd> '''
    return pipes.sub('<kbd>\\1</kbd>', word)



def main(input, should_separate_words = False):
    for line in input:
        if should_separate_words:
            kbd_words(line)
        else:
            kbd_pipes(line)


if __name__ == '__main__':
    main(sys.stdin)
